{require_min_otp_vsn, "20.0"}.

{erl_opts, [debug_info, warn_unused_vars, warn_shadow_vars, warn_unused_import,
            warnings_as_errors, {parse_transform, lager_transform},
            {platform_define, "^(R|1|20)", 'FUN_STACKTRACE'},
            {lager_extra_sinks, [req_logs]}]}.

{deps, [
        {'meck', {
           git, "https://github.com/neeraj9/meck", "dev-no-get_stacktrace"}},
        {lager, {git, "https://github.com/erlang-lager/lager", {branch, "master"}}},
        {'cowboy', {
           git, "git://github.com/ninenines/cowboy.git", {tag, "master"}}},

        %% use jiffy as well
        {jiffy, {git, "https://github.com/davisp/jiffy.git", {tag, "0.14.13"}}},

        %% debug tools
        recon,

        %% metrics
        {folsom_cowboy, {git, "https://github.com/neeraj9/folsom_cowboy.git", {branch, "dev-cowboy2"}}},

        %% dynamic gen_server pool
        {palma, {git, "https://github.com/neeraj9/palma", {branch, "fix-duplicate-supervisor2"}}},

        %% a data driven data structure manipulation library for erlang.
        %% Conveniently manipulate Erlang maps
        {dotto, {
           git, "https://github.com/marianoguerra/dotto", {branch, "master"}}},

        %% erlcron
        {erlcron, {
           git, "https://github.com/neeraj9/erlcron", {branch, "dev-lib"}}},

        %% In-Memory Cache
        {cache, {git, "https://github.com/fogfish/cache", {branch, "master"}}},

        {nested, {git, "https://github.com/odo/nested.git", {branch, "master"}}},
        %% erlware with get_stacktrace/0 fix
        {erlware, {git, "https://github.com/erlware/erlware_commons", {branch, "master"}}},

        %% datetime formatter and timezone util
        {qdate, {git, "https://github.com/choptastic/qdate.git", {branch, "master"}}},

        %% mysql client
        {mysql, {git, "https://github.com/mysql-otp/mysql-otp.git", {branch, "master"}}},

        {erlsom, {git, "https://github.com/willemdj/erlsom", {branch, "master"}}},
        %% latch on to opentracing
        {otter, {git, "https://github.com/Bluehouse-Technology/otter", {branch, "master"}}},

        %% alarm manager (more functionality than Erlang alarm manager).
        {elarm, {git, "https://github.com/esl/elarm", {branch, "master"}}},

        %% circuit breaker
        {fuse, {git, "https://github.com/jlouis/fuse", {branch, "master"}}},

        %% blazingly fast hash
        %% original: https://github.com/pierreis/erlang-xxhash
        {xxhash, {git, "https://github.com/cdegroot/erlang-xxhash", {branch, "master"}}}


]}.

{edoc_opts, [
             {new, true},
             {source_path, ["src/", "include/", "models/", "handlers/"]}
            ]}.

{profiles, [
            {prod, [
                    [{relx, [
                             {dev_mode, false},
                             {include_src, false},
                             {include_erts, true}
                            ]}]
                   ]},

            {test, [
                    {deps, [proper, meck]}
                   ]}
           ]}.

{alias, [
         {check, [xrref, dialyzer, {proper, "-c"}, {cover, "-v"}]}
        ]}.


%% property based testing
{proper_opts, [{numtests, 100}]}.

{relx, [
        {release, {egraph, "0.2.0"},
         [egraph]},

        %% _build/rel/myrel/lib are symlinks to _build/lib
        {dev_mode, true},
        %% Do not include Erlang runtime system and use system default
        {include_erts, false},
        %% provides a few more ways of starting and connecting to your release
        {extended_start_script, true},

        {sys_config, "config/sys.config"},
        {vm_args, "config/vm.args"}
       ]}.

{plugins, [
           rebar_alias,
           rebar3_proper,
           {rebar_raw_resource,
                    {git, "git://github.com/basho/rebar_raw_resource.git",
                             {branch, "master"}}}
          ]}.


{xref_checks, [
               undefined_function_calls,undefined_functions,locals_not_used,
               exports_not_used,deprecated_function_calls, deprecated_functions
              ]}.

%% Paths for structure
{src_dirs, ["include", "src", "models", "handlers"]}.


%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=2 sw=2 ft=erlang et
